{"uid":"6272b942af0a1a22","name":"驗證 不支援的METHOD","fullName":"test_films_id.TestCase_Films_by_ID#test_id_3_unsupported_method","historyId":"dea7b875692dec50dc23866076e30155","time":{"start":1725900311157,"stop":1725900312589,"duration":1432},"description":"驗證 id=3 時不支援的METHOD (Delete) 會得到 status code 為 405 與錯誤訊息","descriptionHtml":"<p>驗證 id=3 時不支援的METHOD (Delete) 會得到 status code 為 405 與錯誤訊息</p>\n","status":"failed","statusMessage":"AssertionError: assert 200 == 405","statusTrace":"self = <test_films_id.TestCase_Films_by_ID object at 0x10307a650>, id = 3\n\n    @allure.title(\"驗證 不支援的METHOD\")\n    @allure.description(\"驗證 id=3 時不支援的METHOD (Delete) 會得到 status code 為 405 與錯誤訊息\")\n    @allure.story(\"/api/films/:id\")\n    @pytest.mark.parametrize(\"id\", [3])  # 設定ID為3\n    def test_id_3_unsupported_method(self, id):\n        res = self.swapi.get_films_by_id(id)\n        res_status = res.status_code\n        res_body = res.json()\n>       assert res_status == 405\nE       assert 200 == 405\n\ntest_films_id.py:105: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1725900282043,"stop":1725900282095,"duration":52},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"驗證 id=3 時不支援的METHOD (Delete) 會得到 status code 為 405 與錯誤訊息","status":"failed","statusMessage":"AssertionError: assert 200 == 405","statusTrace":"self = <test_films_id.TestCase_Films_by_ID object at 0x10307a650>, id = 3\n\n    @allure.title(\"驗證 不支援的METHOD\")\n    @allure.description(\"驗證 id=3 時不支援的METHOD (Delete) 會得到 status code 為 405 與錯誤訊息\")\n    @allure.story(\"/api/films/:id\")\n    @pytest.mark.parametrize(\"id\", [3])  # 設定ID為3\n    def test_id_3_unsupported_method(self, id):\n        res = self.swapi.get_films_by_id(id)\n        res_status = res.status_code\n        res_body = res.json()\n>       assert res_status == 405\nE       assert 200 == 405\n\ntest_films_id.py:105: AssertionError","steps":[],"attachments":[{"uid":"7ebfef614f0df94a","name":"stdout","source":"7ebfef614f0df94a.txt","type":"text/plain","size":2922}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"feature","value":"SW API by ID Tests"},{"name":"story","value":"/api/films/:id"},{"name":"suite","value":"test_films_id"},{"name":"subSuite","value":"TestCase_Films_by_ID"},{"name":"host","value":"Pumbaas-MBP.local"},{"name":"thread","value":"92232-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_films_id"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"id","value":"3"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"6272b942af0a1a22.json","parameterValues":["3"]}