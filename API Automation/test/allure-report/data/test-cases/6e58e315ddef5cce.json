{"uid":"6e58e315ddef5cce","name":"驗證 id=3 時回應中的 release_date 格式","fullName":"test_films_id.TestCase_Films_by_ID#test_id_3_date_format","historyId":"10a296fdb212d8e76cd9df8d6368df52","time":{"start":1725900125429,"stop":1725900126789,"duration":1360},"description":"驗證 id=3 時回應中的 release_date 格式為 YYYY-MM-DD","descriptionHtml":"<p>驗證 id=3 時回應中的 release_date 格式為 YYYY-MM-DD</p>\n","status":"failed","statusMessage":"AssertionError: assert None\n +  where None = <function match at 0x10e04eb60>('^\\\\d{4}-\\\\d{2}-\\\\d{3}$', '1983-05-25')\n +    where <function match at 0x10e04eb60> = re.match\n +    and   '^\\\\d{4}-\\\\d{2}-\\\\d{3}$' = TestData.Date_Regex","statusTrace":"self = <test_films_id.TestCase_Films_by_ID object at 0x10fef9c50>, id = 3\n\n    @allure.title(\"驗證 id=3 時回應中的 release_date 格式\")\n    @allure.description(\"驗證 id=3 時回應中的 release_date 格式為 YYYY-MM-DD\")\n    @allure.story(\"/api/films/:id\")\n    @pytest.mark.parametrize(\"id\", [3])  # 設定ID為3\n    def test_id_3_date_format(self, id):\n        res = self.swapi.get_films_by_id(id)\n        res_status = res.status_code\n        res_body = res.json()\n        assert res_status == 200\n>       assert re.match(TestData.Date_Regex, res_body['release_date'])\nE       AssertionError: assert None\nE        +  where None = <function match at 0x10e04eb60>('^\\\\d{4}-\\\\d{2}-\\\\d{3}$', '1983-05-25')\nE        +    where <function match at 0x10e04eb60> = re.match\nE        +    and   '^\\\\d{4}-\\\\d{2}-\\\\d{3}$' = TestData.Date_Regex\n\ntest_films_id.py:94: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1725900097729,"stop":1725900097781,"duration":52},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"驗證 id=3 時回應中的 release_date 格式為 YYYY-MM-DD","status":"failed","statusMessage":"AssertionError: assert None\n +  where None = <function match at 0x10e04eb60>('^\\\\d{4}-\\\\d{2}-\\\\d{3}$', '1983-05-25')\n +    where <function match at 0x10e04eb60> = re.match\n +    and   '^\\\\d{4}-\\\\d{2}-\\\\d{3}$' = TestData.Date_Regex","statusTrace":"self = <test_films_id.TestCase_Films_by_ID object at 0x10fef9c50>, id = 3\n\n    @allure.title(\"驗證 id=3 時回應中的 release_date 格式\")\n    @allure.description(\"驗證 id=3 時回應中的 release_date 格式為 YYYY-MM-DD\")\n    @allure.story(\"/api/films/:id\")\n    @pytest.mark.parametrize(\"id\", [3])  # 設定ID為3\n    def test_id_3_date_format(self, id):\n        res = self.swapi.get_films_by_id(id)\n        res_status = res.status_code\n        res_body = res.json()\n        assert res_status == 200\n>       assert re.match(TestData.Date_Regex, res_body['release_date'])\nE       AssertionError: assert None\nE        +  where None = <function match at 0x10e04eb60>('^\\\\d{4}-\\\\d{2}-\\\\d{3}$', '1983-05-25')\nE        +    where <function match at 0x10e04eb60> = re.match\nE        +    and   '^\\\\d{4}-\\\\d{2}-\\\\d{3}$' = TestData.Date_Regex\n\ntest_films_id.py:94: AssertionError","steps":[],"attachments":[{"uid":"cb2b5221752ab40b","name":"stdout","source":"cb2b5221752ab40b.txt","type":"text/plain","size":2922}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"story","value":"/api/films/:id"},{"name":"feature","value":"SW API by ID Tests"},{"name":"suite","value":"test_films_id"},{"name":"subSuite","value":"TestCase_Films_by_ID"},{"name":"host","value":"Pumbaas-MBP.local"},{"name":"thread","value":"91948-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_films_id"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"id","value":"3"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"6e58e315ddef5cce.json","parameterValues":["3"]}